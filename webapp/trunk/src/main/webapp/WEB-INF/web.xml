<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright University of Toronto 2006 (c) -->
<!-- $Id$ -->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
  version="2.4">

  <!-- Context Params -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/classes/log4j.properties</param-value>
  </context-param>

  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      /WEB-INF/classes/applicationContext-datasource.xml
      /WEB-INF/classes/applicationContext-hibernate.xml
    </param-value>
  </context-param>

  <!--  Filters -->
  <filter>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
    <init-param>
      <param-name>targetClass</param-name>
      <param-value>org.acegisecurity.util.FilterChainProxy</param-value>
    </init-param>
  </filter>


  <!--  Filter Mappings -->
  <filter-mapping>
    <filter-name>Acegi Filter Chain Proxy</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <!--  Listeners -->
  <listener>
    <listener-class>
      org.springframework.web.util.Log4jConfigListener
    </listener-class>
  </listener>

  <listener>
    <listener-class>
      org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>

  <!--
    The HttpSessionEventPublisher will publish
    HttpSessionCreatedEvent and HttpSessionDestroyedEvent
    to the WebApplicationContext
  -->
  <listener>
    <listener-class>
      org.acegisecurity.ui.session.HttpSessionEventPublisher
    </listener-class>
  </listener>


  <!-- Servlets -->
  <!--
    Using Spring's web MVC
  -->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>
      org.springframework.web.servlet.DispatcherServlet
    </servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/dispatcher-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>


  <!-- Servlet Mappings -->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>*.htm(l)?</url-pattern>
  </servlet-mapping>


  <!--
    Make it distributable for load balancing purposes.
    That means HttpSessions are serialized.
    Objects going into the session better be serializable!
  -->
  <distributable />

  <display-name>SAIL MicroPortal</display-name>

</web-app>