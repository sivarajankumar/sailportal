<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright (c) 2006 Encore Research Group, University of Toronto
  * 
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
  *
  * This library is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  * Lesser General Public License for more details.
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->

<!-- $Id$ -->

<project name="sail-webapp" default="echo" basedir=".">
  <description>
      Build file for using Hibernate Tools for database schema generation.
    </description>
  <property file="build.properties" />

  <path id="lib.tools">
    <path location="${M2_REPO}/org/hibernate/hibernate-tools/3.2.0.beta8/hibernate-tools-3.2.0.beta8.jar"
    />
    <path location="${M2_REPO}/org/hibernate/hibernate-annotations/3.2.0.ga/hibernate-annotations-3.2.0.ga.jar"
    />
    <path location="${M2_REPO}/org/hibernate/hibernate/3.2.0.ga/hibernate-3.2.0.ga.jar"
    />
    <path location="${M2_REPO}/commons-logging/commons-logging/1.1/commons-logging-1.1.jar"
    />
    <path location="${M2_REPO}/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar" />
    <path location="${M2_REPO}/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar"
    />
    <path location="${M2_REPO}/freemarker/freemarker/2.3.4/freemarker-2.3.4.jar"
    />
    <path location="${M2_REPO}/org/acegisecurity/acegi-security/1.0.2/acegi-security-1.0.2.jar"
    />
    <path location="${M2_REPO}/commons-collections/commons-collections/2.1/commons-collections-2.1.jar"
    />
    <path location="${M2_REPO}/hsqldb/hsqldb/1.8.0.7/hsqldb-1.8.0.7.jar" />
  </path>

  <path id="lib.jdbc">
    <path location="${M2_REPO}/hsqldb/hsqldb/1.8.0.7/hsqldb-1.8.0.7.jar" />
  </path>

  <path id="classes">
    <path location="${dir.build}/classes" />
  </path>

  <taskdef name="hibernatetool"
           classname="org.hibernate.tool.ant.HibernateToolTask"
           classpathref="lib.tools"
  />


  <!-- ================================= 
          target: schema-export
         ================================= -->
  <target name="schema-export"
          description="Generate database schema and export it."
  >
    <hibernatetool destdir="${dir.src.db.hsqldb}">
      <classpath refid="classes" />
      <annotationconfiguration configurationfile="${dir.src.resources}/hibernate.cfg.xml"
                               propertyfile="${dir.src.resources}/hibernate.properties"
      />
      <hbm2ddl export="${schema.export.on}"
               drop="${schema.export.drop}"
               create="${schema.export.create}"
               outputfilename="${schema.export.filename}"
      />
    </hibernatetool>
  </target>


  <!-- ================================= 
          target: create-db
         ================================= -->
  <target name="create-db" depends="_set.properties.jdbc" description="Create a production database.">
    <sql driver="${jdbc.driver}"
         password="${jdbc.password}"
         url="${settings.profiles.profile.properties.jdbc.url}"
         userid="${jdbc.username}"
         src="${dir.src.db.hsqldb}/${schema.export.filename}"
         autocommit="false"
         onerror="abort"
         classpathref="lib.jdbc"
    />
  </target>


  <!-- ================================= 
          internal target
         ================================= -->
  <target name="_set.properties.jdbc">
    <xmlproperty file="${user.home}/.m2/settings.xml"
                 semanticAttributes="true"
    />
    <xmlproperty file="${dir.src.resources}/applicationContext-datasource.xml"
                 collapseAttributes="true"
                 semanticAttributes="false"
    />
    <tempfile property="temp.properties"
              destDir="target"
              prefix="temp"
              suffix=".properties"
    />
    <propertyfile file="${temp.properties}">
      <entry key="jdbc.driver" value="${beans.bean.property.value}" />
      <entry key="jdbc.username" value="${beans.bean.property.value}" />
      <!--
The password is currently hard-coded as an empty string for use with HSQLDB only!
When switching to another database, the password needs to be set accordingly.
The best way to set the password would be to extract it from the production configuration.
Follow the pattern used for the driver and username.
      -->
      <entry key="jdbc.password" value="" />
    </propertyfile>
    <replaceregexp file="${temp.properties}" byline="false">
      <regexp pattern="(jdbc\.driver=)([^,]*),(.*)" />
      <substitution expression="\1\2" />
    </replaceregexp>
    <replaceregexp file="${temp.properties}" byline="false">
      <regexp pattern="(jdbc\.username=)([^,]*),([^,]*),([^,]*)(.*)" />
      <substitution expression="\1\4" />
    </replaceregexp>
    <property file="${temp.properties}" />
    <delete file="${temp.properties}" />
  </target>


  <!-- ================================= 
          target: echo
         ================================= -->
  <target name="echo" description="Echo some useful usage information.">
    <echo>
      Before running the target "schema-export",
      ensure that the proper classes and configurations are being used.
      To do that, run "mvn clean compile".
      This will build the production classes and configurations.
      Otherwise, *TEST* configurations may be used to generate the schema!
      
      To get a list of all available targets,
      use "ant -projecthelp".
    </echo>
  </target>
</project>