<?xml version="1.0" encoding="UTF-8"?>
<!--
  * Copyright (c) 2006 Encore Research Group, University of Toronto
  * 
  * This library is free software; you can redistribute it and/or
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
  *
  * This library is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  * Lesser General Public License for more details.
  *
  * You should have received a copy of the GNU Lesser General Public
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->

<!-- $Id$ -->

<project name="sail-webapp" default="echo" basedir=".">
  <description>
      Build file for using Hibernate Tools for database schema generation.
    </description>
  <property file="build.properties" />

  <path id="lib.jdbc">
    <path location="${M2_REPO}/hsqldb/hsqldb/1.8.0.7/hsqldb-1.8.0.7.jar" />
  </path>

  <path id="lib.commons-logging">
    <path location="${M2_REPO}/commons-logging/commons-logging/1.1/commons-logging-1.1.jar"
    />
  </path>

  <path id="lib.commons-dbcp">
    <path location="${M2_REPO}/commons-dbcp/commons-dbcp/1.2.1/commons-dbcp-1.2.1.jar"
    />
  </path>

  <path id="lib.commons-pool">
    <path location="${M2_REPO}/commons-pool/commons-pool/1.2/commons-pool-1.2.jar"
    />
  </path>

  <path id="lib.commons-collections">
    <path location="${M2_REPO}/commons-collections/commons-collections/3.2/commons-collections-3.2.jar"
    />
  </path>

  <path id="lib.dom4j">
    <path location="${M2_REPO}/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar" />
  </path>

  <path id="lib.acegi-security">
    <path location="${M2_REPO}/org/acegisecurity/acegi-security/1.0.3/acegi-security-1.0.3.jar"
    />
  </path>

  <path id="lib.hibernate">
    <path location="${M2_REPO}/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar"
    />
    <path location="${M2_REPO}/org/hibernate/hibernate-annotations/3.2.1.ga/hibernate-annotations-3.2.1.ga.jar"
    />
    <path location="${M2_REPO}/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar"
    />
    <path location="${M2_REPO}/antlr/antlr/2.7.6/antlr-2.7.6.jar" />
  </path>

  <path id="lib.hibernate-tools">
    <path location="${M2_REPO}/org/hibernate/hibernate-tools/3.2.0.beta8/hibernate-tools-3.2.0.beta8.jar"
    />
    <path location="${M2_REPO}/freemarker/freemarker/2.3.4/freemarker-2.3.4.jar"
    />
    <path refid="lib.commons-logging" />
    <path refid="lib.commons-collections" />
    <path refid="lib.jdbc" />
    <path refid="lib.acegi-security" />
    <path refid="lib.hibernate" />
    <path refid="lib.dom4j" />
  </path>

  <path id="lib.jta">
    <path location="${M2_REPO}/javax/transaction/jta/1.0.1B/jta-1.0.1B.jar" />
  </path>

  <path id="lib.spring">
    <path location="${M2_REPO}/org/springframework/spring-context/2.0.2/spring-context-2.0.2.jar"
    />
    <path location="${M2_REPO}/org/springframework/spring-beans/2.0.2/spring-beans-2.0.2.jar"
    />
    <path location="${M2_REPO}/org/springframework/spring-core/2.0.2/spring-core-2.0.2.jar"
    />
    <path location="${M2_REPO}/org/springframework/spring/2.0.2/spring-2.0.2.jar"
    />
  </path>

  <path id="lib.cglib">
    <path location="${M2_REPO}/cglib/cglib/2.1_3/cglib-2.1_3.jar" />
    <path location="${M2_REPO}/asm/asm/1.5.3/asm-1.5.3.jar" />
  </path>

  <path id="lib.commons-codec">
    <path location="${M2_REPO}/commons-codec/commons-codec/1.3/commons-codec-1.3.jar"
    />
  </path>

  <path id="lib.commons-httpclient">
    <path location="${M2_REPO}/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar"
    />
    <path refid="lib.commons-codec" />
  </path>

  <path id="lib.jdom">
    <path location="${M2_REPO}/jdom/jdom/1.0/jdom-1.0.jar" />
  </path>

  <path id="classes">
    <path location="${dir.build.classes}" />
  </path>

  <taskdef name="hibernatetool"
           classname="org.hibernate.tool.ant.HibernateToolTask"
           classpathref="lib.hibernate-tools"
  />


  <!-- ================================= 
          target: db.schema-export
         ================================= -->
  <target name="db.schema-export"
          depends="_mvn.compile"
          description="Generate the database schema from annotated persistent classes."
  >
    <hibernatetool destdir="${dir.src.db.hsqldb}">
      <classpath refid="classes" />
      <annotationconfiguration configurationfile="${dir.build.classes}/hibernate.cfg.xml"
                               propertyfile="${dir.build.classes}/hibernate.properties"
      />
      <hbm2ddl export="${schema.export.on}"
               drop="${schema.export.drop}"
               create="${schema.export.create}"
               outputfilename="${schema.export.filename}"
      />
    </hibernatetool>
  </target>


  <!-- ================================= 
          target: db.create
         ================================= -->
  <target name="db.create"
          depends="_set.properties.jdbc"
          description="Create a production database with table structure only.  No initial data inserted."
  >

    <!-- determine the database directory and files and delete them first -->
    <tempfile property="temp.file" prefix="temp" suffix=".properties" />
    <propertyfile file="${temp.file}">
      <entry key="db.directory"
             value="${settings.profiles.profile.properties.jdbc.url}"
      />
      <entry key="db.prefix"
             value="${settings.profiles.profile.properties.jdbc.url}"
      />
    </propertyfile>
    <replaceregexp file="${temp.file}">
      <regexp pattern="=jdbc\\:hsqldb\\:file\\:(.*)/(.*);shutdown\\=true" />
      <substitution expression="=\1" />
    </replaceregexp>
    <replaceregexp file="${temp.file}">
      <regexp pattern="=jdbc\\:hsqldb\\:file\\:.*/(.*);shutdown\\=true" />
      <substitution expression="=\1" />
    </replaceregexp>
    <property file="${temp.file}" />
    <delete>
      <fileset dir="${db.directory}" includes="**/${db.prefix}*" />
      <fileset file="${temp.file}" />
    </delete>

    <sql driver="${settings.profiles.profile.properties.jdbc.driverClassName}"
         url="${settings.profiles.profile.properties.jdbc.url}"
         userid="${settings.profiles.profile.properties.jdbc.username}"
         password="${jdbc.password}"
         src="${dir.src.db.hsqldb}/${schema.export.filename}"
         autocommit="false"
         onerror="abort"
         classpathref="lib.jdbc"
    />
  </target>


  <!-- ================================= 
          target: db.init
         ================================= -->
  <target name="db.init"
          depends="_mvn.compile"
          description="Initialize a production database with user role and default administrator account."
  >
    <java classname="net.sf.sail.webapp.service.authentication.impl.CreateDefaultUsers"
          fork="true"
          newenvironment="true"
    >
      <arg value="${default.admin.username}" />
      <arg value="${default.admin.password}" />
      <classpath>
        <path refid="lib.jdbc" />
        <path refid="lib.commons-dbcp" />
        <path refid="lib.commons-pool" />
        <path refid="lib.commons-collections" />
        <path refid="lib.commons-logging" />
        <path refid="lib.commons-httpclient" />
        <path refid="lib.hibernate" />
        <path refid="lib.dom4j" />
        <path refid="lib.spring" />
        <path refid="lib.jta" />
        <path refid="lib.cglib" />
        <path refid="lib.acegi-security" />
        <path refid="lib.jdom" />
        <path refid="classes" />
      </classpath>
    </java>
  </target>


  <!-- ================================= 
          internal target
         ================================= -->
  <target name="_mvn.compile">
    <exec executable="mvn" failonerror="true" failifexecutionfails="true">
      <arg value="clean" />
      <arg value="test" />
      <arg value="clean" />
      <arg value="compile" />
    </exec>
  </target>


  <!-- ================================= 
          internal target
         ================================= -->
  <target name="_set.properties.jdbc">
    <!--
For some reason, an empty string in the maven settings.xml file is discard from the XML parsed properties.
The password is currently hard-coded in build.properties as an empty string for use with HSQLDB only!
When switching to another database, the password needs to be set accordingly.
The best way to set the password would be to extract it from settings.xml like the driverClassName, etc.
    -->
    <xmlproperty file="${user.home}/.m2/settings.xml"
                 semanticAttributes="true"
    />
  </target>


  <!-- ================================= 
          target: echo
         ================================= -->
  <target name="echo" description="Echo some useful usage information.">
    <echo>
      To get a list of all available targets,
      use "ant -projecthelp".
    </echo>
  </target>
</project>